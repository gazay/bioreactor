#!/usr/bin/env ruby

$0 = 'websocket'

require 'bundler'
Bundler.require :websocket
$:.unshift './lib'
require 'cell'
require 'map'
require 'wall'
require 'worm'
require 'human'

def json(command, data)
  JSON.generate [command, data]
end

def tick
  EM::Timer.new(0.05) do
    # new_map = Map.view
    # if $previous_map != new_map
    #   $previous_map = new_map
    #   puts new_map
    #   puts
    # end
    Worm.all.each &:move
    json = JSON.generate ['render', Map.data]
    Worm.sockets.each do |socket|
      unless socket.active
        socket.active = true
        socket.send json
      end
    end
    tick
  end
end

Host = (ENV['RAILS_ENV'] == 'production') ? 'bioreactor.r10.railsrumble.com' : '0.0.0.0'

class EM::WebSocket::Connection
  attr_accessor :active
end

EM.run do

  EM::WebSocket.start(host: '0.0.0.0', port: 8080) do |socket|

    socket.onopen do
      socket.send json('id', socket.object_id)
      Worm.new socket
    end

    socket.onclose do
      Worm.destroy socket
    end

    socket.onmessage do |message|
      if message == 'ready'
        socket.active = false
      else
        Worm.find(socket).direction = message.to_i
      end
    end

  end

  tick
end
